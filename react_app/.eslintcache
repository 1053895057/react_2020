[{"F:\\study\\React\\react-2020-12-01\\react_app\\src\\index.js":"1","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\app\\app.jsx":"2","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\comment-add\\comment-add.jsx":"3","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\comment-list\\comment-list.jsx":"4","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\comment-item\\comment-item.jsx":"5","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\02useEffect.jsx":"6","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\01useState.jsx":"7","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\03useRef.jsx":"8","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\04myContext.jsx":"9","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\05useMemo.jsx":"10","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\05useMemoChild.jsx":"11","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\04useContext.jsx":"12","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\06useCallback.jsx":"13","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\07useImeperativeHandle.jsx":"14","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\07useImperativeHandle1.jsx":"15","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\08useLayoutEffect.jsx":"16","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\09hooks.jsx":"17","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\10useReducer1.jsx":"18","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\11index.jsx":"19","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\11Reducer.jsx":"20","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\11Text1.jsx":"21","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\11Text2.jsx":"22"},{"size":158,"mtime":1607485726355,"results":"23","hashOfConfig":"24"},{"size":3325,"mtime":1611071871278,"results":"25","hashOfConfig":"24"},{"size":1948,"mtime":1607500630946,"results":"26","hashOfConfig":"24"},{"size":979,"mtime":1608467709031,"results":"27","hashOfConfig":"24"},{"size":956,"mtime":1608469003421,"results":"28","hashOfConfig":"24"},{"size":1232,"mtime":1610890344369,"results":"29","hashOfConfig":"24"},{"size":1220,"mtime":1610890334465,"results":"30","hashOfConfig":"24"},{"size":653,"mtime":1610890386525,"results":"31","hashOfConfig":"24"},{"size":845,"mtime":1610891803964,"results":"32","hashOfConfig":"24"},{"size":1733,"mtime":1610890593124,"results":"33","hashOfConfig":"24"},{"size":270,"mtime":1610890509974,"results":"34","hashOfConfig":"24"},{"size":397,"mtime":1610891839546,"results":"35","hashOfConfig":"24"},{"size":1101,"mtime":1610893415947,"results":"36","hashOfConfig":"24"},{"size":736,"mtime":1610983304273,"results":"37","hashOfConfig":"24"},{"size":1021,"mtime":1610984264644,"results":"38","hashOfConfig":"24"},{"size":958,"mtime":1611069849997,"results":"39","hashOfConfig":"24"},{"size":749,"mtime":1611070214693,"results":"40","hashOfConfig":"24"},{"size":1443,"mtime":1611070880099,"results":"41","hashOfConfig":"24"},{"size":320,"mtime":1611071617259,"results":"42","hashOfConfig":"24"},{"size":722,"mtime":1611071967187,"results":"43","hashOfConfig":"24"},{"size":656,"mtime":1611072105587,"results":"44","hashOfConfig":"24"},{"size":657,"mtime":1611072144124,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"cl9u2j",{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\study\\React\\react-2020-12-01\\react_app\\src\\index.js",[],["101","102"],"F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\app\\app.jsx",["103","104"],"F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\comment-add\\comment-add.jsx",[],"F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\comment-list\\comment-list.jsx",[],"F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\comment-item\\comment-item.jsx",[],"F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\02useEffect.jsx",["105","106","107","108"],"import {useState,useEffect} from 'react'\r\n\r\nexport default ()=>{\r\n    const [count,setCount]=useState(0)\r\n    const [name,setName]=useState('tsj')\r\n    /*\r\n        # useEffect\r\n        1.componentDidMount,componentDidUpdate和componentWillUnmount\r\n        2.副作用（DOM操作，数据请求，组件更新）\r\n        3.useEffect 为什么在组件函数内部执行？可以获取props和state，采用闭包的心事\r\n        4.无组件更新\r\n        5.useEffect(回调函数，数组(可不写))\r\n        6.多个useEffect()\r\n    */ \r\n\r\n    // componentDidMount组件挂载的时候一定会执行\r\n    // componentDidUpdate，添加空数组，不会执行\r\n    // componentWillUnmount，return函数执行\r\n   useEffect(()=>{\r\n       console.log(count)\r\n        // return的函数组件卸载的时候调用   \r\n       return ()=>{\r\n           console.log('componentWillUnmount')\r\n       }\r\n   },[])  //加一个参数空数组，每次更新就不会触发useEffect，如果有多个state属性，数组中[count]写哪几个，就监听哪几个\r\n   return (\r\n       <div>\r\n           <h2>effect</h2>\r\n           <p>{count}</p>\r\n           <button onClick={()=>setCount(count+1)}>点击</button>\r\n       </div>\r\n   )\r\n}","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\01useState.jsx",["109"],"import React, { useState } from 'react'\r\n\r\nconst Index = () => {\r\n    const [count, setCount] = useState(0)\r\n    const [obj,setObj]=useState({name:\"zhangsan\"})\r\n    const [arr,setArr]=useState([1,2,3])\r\n    const [func,setfunc]=useState(()=>{\r\n        return {name:'tsj'}\r\n    })\r\n    return (\r\n        <div>\r\n            <h2>{count}</h2>\r\n            <button onClick={()=>(setCount(count+1))}>点击</button>\r\n            <h2>{obj.name}---{obj.age}</h2>\r\n            {/* 方法1 */}\r\n            <button onClick={()=>(setObj({name:'lisi'}))}>点击</button>\r\n            {/* 方法二 */}\r\n            <button onClick={()=>(\r\n                setObj({\r\n                    ...obj,\r\n                    name:'lisi',\r\n                    age:18\r\n                })\r\n            )}>点击</button>\r\n            <h2>数组：{arr}</h2>\r\n            <button onClick={()=>(\r\n                setArr(()=>{\r\n                    arr.push(4)\r\n                    console.log(arr)\r\n                    return [...arr]\r\n                })\r\n            )}>点击</button>\r\n            {/* 如果是函数类型的，显示的是返回体 */}\r\n            <h2>函数：{func.name}</h2>\r\n        </div>\r\n    )\r\n}\r\nexport default Index\r\n","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\03useRef.jsx",["110"],"import {useRef} from \"react\"\r\n\r\n\r\nexport default ()=>{\r\n    // 用法一：获取input的值\r\n    const inputEl=useRef(null)\r\n    // 用法二：保存变量\r\n    const save=useRef({value:'123'})\r\n    return (\r\n        <>\r\n            <h3>useRef</h3>\r\n            <input type=\"text\" ref={inputEl}/>\r\n            <button onClick={()=>{\r\n                console.log(inputEl)\r\n                console.log(inputEl.current)\r\n                console.log(inputEl.current.value)\r\n                console.log(save)\r\n                save.current.value=inputEl.current.value\r\n                console.log(save)\r\n            }}>点击</button>\r\n        </>\r\n    )\r\n}","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\04myContext.jsx",["111"],"//createContext生成容器组件，挂一个属性\r\n//useContext在子组件上接收容器组件传递过来的值\r\n\r\nimport { useState, useRef,createContext} from 'react'\r\n\r\nimport ChildContext from './04useContext'\r\n// 创建容器组件\r\nexport const MyContext = createContext();\r\n\r\nexport default () => {\r\n    let [count, setCount] = useState(0)\r\n    let [name,setName]=useState('tsj')\r\n    const inputEl=useRef(null)\r\n    return (\r\n        <>\r\n            <MyContext.Provider value={{count,name}} >\r\n                <h3>useContext</h3>\r\n                <ChildContext></ChildContext>\r\n            </MyContext.Provider>\r\n            <input type=\"text\" ref={inputEl}/>\r\n            <button onClick={()=>{\r\n                setCount(inputEl.current.value)\r\n                setName('jack')\r\n            }}>点击</button>\r\n        </>\r\n    )\r\n}","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\05useMemo.jsx",["112"],"// useMemo\r\n\r\n// 和shouldComponentUpdate类似作用，在渲染过程中避免重复渲染的问题\r\n// 当状态或者父组件传来的属性发生变化时，更新组件\r\n\r\n// 1.useMemo就是用的memoization来提高性能的\r\n// 2.memoization是javascript中的一种缓存技术\r\n// 如果我们有CPU密集型操作。我们可以通过将初识操作的结果存储在缓存中优化使用。如果操作必然会再次执行，我们将不再麻烦使用我们的CPU\r\n// 因为相同结果存储在某个地方，我们只是简单的返回结果\r\n\r\n// 记住这个是以空间换速度，所以最好确定你是否值得这么做，有些场景很有必要使用\r\n\r\n// useMemo()是一个函数，有两个参数，第一个参数是个函数，第二个参数是个数组\r\n// useMemo(()=>{},[默认可以不写]）\r\n// useMemo和useEffect执行的时间不同，useEffect实在componentDidMount以后执行，useMemo实在组件渲染过程中执行\r\n\r\nimport {useState} from 'react'\r\n\r\nimport ChildMemo from './05useMemoChild'\r\n\r\nexport default ()=>{\r\n    let [count,setCount]=useState(0)\r\n    let [num,setNum]=useState(0)\r\n    // useEffect(() => {\r\n    //     console.log(\"useEffect\")\r\n    // })\r\n    //第二个参数数组，如果是空数组，都不会返回\r\n    return (\r\n        <>\r\n            {/* <h3>父组件状态count:{count}</h3> */}\r\n            <h3>父组件状态count:{count}-------------num:{num}</h3>\r\n            <ChildMemo c={count} n={num}></ChildMemo>\r\n            <button onClick={()=>{\r\n                setCount(count+1)\r\n            }}>memo按钮count</button>\r\n            <button onClick={()=>{\r\n                setNum(num+1)\r\n            }}>memo按钮num</button>\r\n        </>\r\n    )\r\n}","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\05useMemoChild.jsx",["113","114"],"import {useMemo} from 'react'\r\n\r\nexport default ({c,n})=>{\r\n    let res=useMemo(()=>{\r\n        console.log(\"useMemo\")\r\n        return {c,n}\r\n    },[c])\r\n    return (\r\n        <>\r\n            <h2>子组件：count:{res.c}-----------num:{res.n}</h2>\r\n        </>\r\n    )\r\n}","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\04useContext.jsx",["115"],"//createContext生成容器组件，挂一个属性\r\n//useContext在子组件上接收容器组件传递过来的值\r\n\r\nimport { useContext } from 'react'\r\nimport {MyContext} from './04myContext'\r\nexport default () => {\r\n    let value = useContext(MyContext)\r\n    console.log(value)\r\n    return (\r\n        <>\r\n            <h3>我是子组件{value.count}+{value.name}</h3>\r\n        </>\r\n    )\r\n}\r\n","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\06useCallback.jsx",["116","117"],"// useCallback\r\n\r\n//作用：避免组件重复渲染，提高性能（useMemo）\r\n// 可以控制组件什么时候更细\r\n// 同样用到了缓存技术，和useMemo不同\r\n// useCallback缓存的是一个函数，是个函数就可以执行\r\n\r\n// useCallback有两个参数，第一个参数是个函数，第二个参数是个数组\r\n// useCallback(()=>{},[可以不写])\r\n\r\n// const callback=useCallback(()=>{},[])\r\n// callback是个函数，可以直接callback()执行\r\n\r\nimport {useState,useCallback} from 'react'\r\nexport default ()=>{\r\n    const [count,setCount]=useState(0)\r\n    const [num,setNum]=useState(10)\r\n    let callback=useCallback(()=>{\r\n        console.log(count)\r\n        return count+2\r\n    },[num])\r\n    return (\r\n        <>\r\n            <h3>状态count:{count}</h3>\r\n            <h3>callbakc：{callback()}</h3>\r\n            <h3>状态num:{num}</h3>\r\n            <button onClick={()=>{\r\n                setCount(count+1)\r\n            }}>setCount</button>\r\n            <button onClick={()=>{\r\n                setNum(num-1)\r\n            }}>setNum</button>\r\n        </>\r\n    )\r\n}","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\07useImeperativeHandle.jsx",["118"],"// useImperativeHandle\r\n\r\n// useImperativeHandle可以让你在使用ref时自定义暴露给父组件的实例值。在大多数情况下\r\n// ，应当避免使用ref这样的命令式代码。useImperativeHandle应当与forwardRef一起\r\n\r\n// useImperativeHandle(ref(传递来的),()=>{},[])\r\n\r\n\r\nimport {forwardRef,useRef} from 'react'\r\n\r\nconst Forwar=forwardRef((props,ref)=>{\r\n    return (\r\n        <>\r\n            <h3 ref={ref}>123</h3>\r\n            <h4>456</h4>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default ()=>{\r\n    const h3El=useRef(null)\r\n    return (\r\n        <>\r\n           <Forwar ref={h3El}></Forwar> \r\n           <button onClick={()=>{\r\n               console.log(h3El)\r\n           }}>点击</button>\r\n        </>\r\n    )\r\n}","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\07useImperativeHandle1.jsx",["119","120"],"import {forwardRef,useRef,useImperativeHandle,useState} from 'react'\r\n\r\nconst Imperative=forwardRef((props,refa)=>{\r\n    const inputRef=useRef()\r\n    const [count,setCount]=useState(0)\r\n    const [num,setNum]=useState(0)\r\n    useImperativeHandle(refa,()=>(\r\n        {\r\n            name:'tsj',\r\n            focus:()=>{\r\n                inputRef.current.focus()\r\n            },\r\n            count\r\n        }\r\n    ),[num])\r\n        \r\n    return (\r\n        <>\r\n            <h3>count:{count}</h3>\r\n            <h3>count:{num}</h3>\r\n            <input type=\"text\" ref={inputRef}/>\r\n            <button onClick={()=>{setCount(count+1)}}>setCount</button>\r\n            <button onClick={()=>{setNum(num+1)}}>setNum</button>\r\n        </>\r\n    )\r\n})\r\n\r\n\r\nexport default ()=>{\r\n    const el=useRef()\r\n    return (\r\n        <>\r\n            <Imperative ref={el}></Imperative>\r\n            <button onClick={()=>{\r\n                console.log(el)\r\n                el.current.focus()\r\n            }}>点击</button>\r\n        </>\r\n    )\r\n}","F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\08useLayoutEffect.jsx",["121"],"F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\09hooks.jsx",["122"],"F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\10useReducer1.jsx",["123"],"F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\11index.jsx",["124"],"F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\11Reducer.jsx",[],"F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\11Text1.jsx",["125"],"F:\\study\\React\\react-2020-12-01\\react_app\\src\\components\\com-hooks\\11Text2.jsx",["126"],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":88,"column":21,"nodeType":"133","endLine":88,"endColumn":31},{"ruleId":"131","severity":1,"message":"134","line":89,"column":21,"nodeType":"133","endLine":89,"endColumn":31},{"ruleId":"135","severity":1,"message":"136","line":3,"column":1,"nodeType":"137","endLine":33,"endColumn":2},{"ruleId":"138","severity":1,"message":"139","line":5,"column":12,"nodeType":"140","messageId":"141","endLine":5,"endColumn":16},{"ruleId":"138","severity":1,"message":"142","line":5,"column":17,"nodeType":"140","messageId":"141","endLine":5,"endColumn":24},{"ruleId":"143","severity":1,"message":"144","line":25,"column":6,"nodeType":"145","endLine":25,"endColumn":8,"suggestions":"146"},{"ruleId":"138","severity":1,"message":"147","line":7,"column":17,"nodeType":"140","messageId":"141","endLine":7,"endColumn":24},{"ruleId":"135","severity":1,"message":"136","line":4,"column":1,"nodeType":"137","endLine":23,"endColumn":2},{"ruleId":"135","severity":1,"message":"136","line":10,"column":1,"nodeType":"137","endLine":27,"endColumn":2},{"ruleId":"135","severity":1,"message":"136","line":21,"column":1,"nodeType":"137","endLine":41,"endColumn":2},{"ruleId":"135","severity":1,"message":"136","line":3,"column":1,"nodeType":"137","endLine":13,"endColumn":2},{"ruleId":"143","severity":1,"message":"148","line":7,"column":7,"nodeType":"145","endLine":7,"endColumn":10,"suggestions":"149"},{"ruleId":"135","severity":1,"message":"136","line":6,"column":1,"nodeType":"137","endLine":14,"endColumn":2},{"ruleId":"135","severity":1,"message":"136","line":15,"column":1,"nodeType":"137","endLine":35,"endColumn":2},{"ruleId":"143","severity":1,"message":"150","line":21,"column":7,"nodeType":"145","endLine":21,"endColumn":12,"suggestions":"151"},{"ruleId":"135","severity":1,"message":"136","line":20,"column":1,"nodeType":"137","endLine":30,"endColumn":2},{"ruleId":"143","severity":1,"message":"152","line":15,"column":7,"nodeType":"145","endLine":15,"endColumn":12,"suggestions":"153"},{"ruleId":"135","severity":1,"message":"136","line":29,"column":1,"nodeType":"137","endLine":40,"endColumn":2},{"ruleId":"135","severity":1,"message":"136","line":10,"column":1,"nodeType":"137","endLine":35,"endColumn":2},{"ruleId":"135","severity":1,"message":"136","line":19,"column":1,"nodeType":"137","endLine":30,"endColumn":2},{"ruleId":"135","severity":1,"message":"136","line":9,"column":1,"nodeType":"137","endLine":44,"endColumn":2},{"ruleId":"135","severity":1,"message":"136","line":7,"column":1,"nodeType":"137","endLine":16,"endColumn":2},{"ruleId":"135","severity":1,"message":"136","line":4,"column":1,"nodeType":"137","endLine":23,"endColumn":2},{"ruleId":"135","severity":1,"message":"136","line":4,"column":1,"nodeType":"137","endLine":23,"endColumn":2},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"react/jsx-pascal-case","Imported JSX component Hooks7_1 must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Hooks7_2 must be in PascalCase or SCREAMING_SNAKE_CASE","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'setName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.","ArrayExpression",["156"],"'setfunc' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'n'. Either include it or remove the dependency array.",["157"],"React Hook useCallback has a missing dependency: 'count'. Either include it or remove the dependency array.",["158"],"React Hook useImperativeHandle has a missing dependency: 'count'. Either include it or remove the dependency array.",["159"],"no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"160","fix":"164"},{"desc":"160","fix":"165"},"Update the dependencies array to be: [count]",{"range":"166","text":"167"},"Update the dependencies array to be: [c, n]",{"range":"168","text":"169"},{"range":"170","text":"167"},{"range":"171","text":"167"},[705,707],"[count]",[147,150],"[c, n]",[514,519],[413,418]]